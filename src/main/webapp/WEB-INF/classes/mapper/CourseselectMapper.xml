<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.dao.CourseselectMapper">
  <resultMap id="BaseResultMap" type="com.edu.pojo.Courseselect">
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="CourseId" jdbcType="INTEGER" property="courseid" />
    <result column="ClassId" jdbcType="INTEGER" property="classid" />
    <result column="Schedule" jdbcType="INTEGER" property="schedule" />
    <result column="Mark1" jdbcType="INTEGER" property="mark1" />
    <result column="Mark2" jdbcType="INTEGER" property="mark2" />
    <result column="Mark3" jdbcType="INTEGER" property="mark3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UserId, CourseId, ClassId, Schedule, Mark1, Mark2, Mark3
  </sql>
  <select id="selectByExample" parameterType="com.edu.pojo.CourseselectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from courseselect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.edu.pojo.CourseselectExample">
    delete from courseselect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edu.pojo.Courseselect">
    insert into courseselect (UserId, CourseId, ClassId, 
      Schedule, Mark1, Mark2, 
      Mark3)
    values (#{userid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, #{classid,jdbcType=INTEGER}, 
      #{schedule,jdbcType=INTEGER}, #{mark1,jdbcType=INTEGER}, #{mark2,jdbcType=INTEGER}, 
      #{mark3,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.edu.pojo.Courseselect">
    insert into courseselect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        UserId,
      </if>
      <if test="courseid != null">
        CourseId,
      </if>
      <if test="classid != null">
        ClassId,
      </if>
      <if test="schedule != null">
        Schedule,
      </if>
      <if test="mark1 != null">
        Mark1,
      </if>
      <if test="mark2 != null">
        Mark2,
      </if>
      <if test="mark3 != null">
        Mark3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="schedule != null">
        #{schedule,jdbcType=INTEGER},
      </if>
      <if test="mark1 != null">
        #{mark1,jdbcType=INTEGER},
      </if>
      <if test="mark2 != null">
        #{mark2,jdbcType=INTEGER},
      </if>
      <if test="mark3 != null">
        #{mark3,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edu.pojo.CourseselectExample" resultType="java.lang.Long">
    select count(*) from courseselect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update courseselect
    <set>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null">
        CourseId = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.classid != null">
        ClassId = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.schedule != null">
        Schedule = #{record.schedule,jdbcType=INTEGER},
      </if>
      <if test="record.mark1 != null">
        Mark1 = #{record.mark1,jdbcType=INTEGER},
      </if>
      <if test="record.mark2 != null">
        Mark2 = #{record.mark2,jdbcType=INTEGER},
      </if>
      <if test="record.mark3 != null">
        Mark3 = #{record.mark3,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update courseselect
    set UserId = #{record.userid,jdbcType=INTEGER},
      CourseId = #{record.courseid,jdbcType=INTEGER},
      ClassId = #{record.classid,jdbcType=INTEGER},
      Schedule = #{record.schedule,jdbcType=INTEGER},
      Mark1 = #{record.mark1,jdbcType=INTEGER},
      Mark2 = #{record.mark2,jdbcType=INTEGER},
      Mark3 = #{record.mark3,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>