<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="com.edu.pojo.Course">
    <id column="CourseId" jdbcType="INTEGER" property="courseid" />
    <result column="CourseTeacherId" jdbcType="INTEGER" property="courseteacherid" />
    <result column="CourseName" jdbcType="VARCHAR" property="coursename" />
    <result column="Description" jdbcType="VARCHAR" property="description" />
    <result column="PicURL" jdbcType="VARCHAR" property="picurl" />
    <result column="CourseType" jdbcType="INTEGER" property="coursetype" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CourseId, CourseTeacherId, CourseName, Description, PicURL, CourseType
  </sql>
  <select id="selectByExample" parameterType="com.edu.pojo.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  
  <!-- add after -->
   <select id="getCoursesByTeacherId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where CourseTeacherId = #{teacher_id,jdbcType=INTEGER}
  </select>
  
  <!-- add after -->
   <select id="getCoursesByType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where CourseType = #{type,jdbcType=INTEGER}
  </select>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where CourseId = #{courseid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where CourseId = #{courseid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.edu.pojo.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edu.pojo.Course">
    insert into course (CourseId, CourseTeacherId, CourseName, 
      Description, PicURL, CourseType
      )
    values (#{courseid,jdbcType=INTEGER}, #{courseteacherid,jdbcType=INTEGER}, #{coursename,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{picurl,jdbcType=VARCHAR}, #{coursetype,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.edu.pojo.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseid != null">
        CourseId,
      </if>
      <if test="courseteacherid != null">
        CourseTeacherId,
      </if>
      <if test="coursename != null">
        CourseName,
      </if>
      <if test="description != null">
        Description,
      </if>
      <if test="picurl != null">
        PicURL,
      </if>
      <if test="coursetype != null">
        CourseType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="courseteacherid != null">
        #{courseteacherid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null">
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="picurl != null">
        #{picurl,jdbcType=VARCHAR},
      </if>
      <if test="coursetype != null">
        #{coursetype,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edu.pojo.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.courseid != null">
        CourseId = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.courseteacherid != null">
        CourseTeacherId = #{record.courseteacherid,jdbcType=INTEGER},
      </if>
      <if test="record.coursename != null">
        CourseName = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        Description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.picurl != null">
        PicURL = #{record.picurl,jdbcType=VARCHAR},
      </if>
      <if test="record.coursetype != null">
        CourseType = #{record.coursetype,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set CourseId = #{record.courseid,jdbcType=INTEGER},
      CourseTeacherId = #{record.courseteacherid,jdbcType=INTEGER},
      CourseName = #{record.coursename,jdbcType=VARCHAR},
      Description = #{record.description,jdbcType=VARCHAR},
      PicURL = #{record.picurl,jdbcType=VARCHAR},
      CourseType = #{record.coursetype,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.edu.pojo.Course">
    update course
    <set>
      <if test="courseteacherid != null">
        CourseTeacherId = #{courseteacherid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null">
        CourseName = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        Description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="picurl != null">
        PicURL = #{picurl,jdbcType=VARCHAR},
      </if>
      <if test="coursetype != null">
        CourseType = #{coursetype,jdbcType=INTEGER},
      </if>
    </set>
    where CourseId = #{courseid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edu.pojo.Course">
    update course
    set CourseTeacherId = #{courseteacherid,jdbcType=INTEGER},
      CourseName = #{coursename,jdbcType=VARCHAR},
      Description = #{description,jdbcType=VARCHAR},
      PicURL = #{picurl,jdbcType=VARCHAR},
      CourseType = #{coursetype,jdbcType=INTEGER}
    where CourseId = #{courseid,jdbcType=INTEGER}
  </update>
</mapper>